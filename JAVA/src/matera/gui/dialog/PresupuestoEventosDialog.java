/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matera.gui.dialog;

import ar.com.matera.TableModels.LogPresupuestoTableModel;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import matera.db.dao.PresupuestoDao;
import matera.db.dao.RemitoDao;
import matera.db.dto.EventoPresupuestoDTO;
import matera.db.dto.EventoRemitoDTO;

/**
 *
 * @author h2o
 */
public class PresupuestoEventosDialog extends javax.swing.JDialog {

    LogPresupuestoTableModel presupuestoTableModel;
    DefaultTableModel remitoTableModel;
    /**
     * Creates new form PresupuestoEventosDialog
     * @param parent
     * @param modal
     * @param id_presupuesto
     */
    public PresupuestoEventosDialog(java.awt.Frame parent, boolean modal, Integer id_presupuesto) {
        super(parent, modal);
        initComponents();
        
        presupuestoTableModel = new LogPresupuestoTableModel();
        presupuestoTableModel.getPropertiesFromDefaultModel(presupuestoTable.getModel());
        presupuestoTable.setModel(presupuestoTableModel);
        
        remitoTableModel = (DefaultTableModel) remitoTable.getModel();
        remitoTable.setModel(remitoTableModel);
        findEventos(id_presupuesto);
        
    }
    
    private void findEventos(Integer id_presupuesto){
        
        List<EventoPresupuestoDTO> eventos = new PresupuestoDao().getEventos(id_presupuesto);
        List<EventoRemitoDTO> remitoEventos = new RemitoDao().getEventosForPresupuesto(id_presupuesto);
        
        // Fill presupestoTableModel
        eventos.forEach(r ->{
            presupuestoTableModel.addRow(r);
        });
        
        // Fill remitoTableModel
        remitoEventos.forEach(r ->{
            Vector v = new Vector();
            v.add(r.getRemito().getIdRemito());
            v.add(r.getRemito().getNumcomp());
            v.add(r.getTipo().getNombre());
            v.add(r.getUsuario().getNombre());
            v.add(r.getEvento().getTimestamp());
            remitoTableModel.addRow(v);
        });        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        presupuestoTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        remitoTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        presupuestoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "evento", "usuario", "timestamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        presupuestoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(presupuestoTable);

        remitoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_remito", "comprobante", "evento", "usuario", "timestamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(remitoTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable presupuestoTable;
    private javax.swing.JTable remitoTable;
    // End of variables declaration//GEN-END:variables
}
