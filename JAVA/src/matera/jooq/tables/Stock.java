/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import matera.jooq.Keys;
import matera.jooq.Matera;
import matera.jooq.tables.records.StockRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Stock extends TableImpl<StockRecord> {

	private static final long serialVersionUID = 853781671;

	/**
	 * The reference instance of <code>matera.stock</code>
	 */
	public static final Stock STOCK = new Stock();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<StockRecord> getRecordType() {
		return StockRecord.class;
	}

	/**
	 * The column <code>matera.stock.id_stock</code>.
	 */
	public final TableField<StockRecord, Integer> ID_STOCK = createField("id_stock", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>matera.stock.fecha</code>.
	 */
	public final TableField<StockRecord, Date> FECHA = createField("fecha", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>matera.stock.id_tipoComp</code>.
	 */
	public final TableField<StockRecord, Integer> ID_TIPOCOMP = createField("id_tipoComp", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.numComp</code>.
	 */
	public final TableField<StockRecord, String> NUMCOMP = createField("numComp", org.jooq.impl.SQLDataType.VARCHAR.length(12).defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.id_proveedor</code>.
	 */
	public final TableField<StockRecord, Integer> ID_PROVEEDOR = createField("id_proveedor", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.id_zona</code>.
	 */
	public final TableField<StockRecord, Integer> ID_ZONA = createField("id_zona", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.observaciones</code>.
	 */
	public final TableField<StockRecord, String> OBSERVACIONES = createField("observaciones", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>matera.stock.chequeado</code>.
	 */
	public final TableField<StockRecord, String> CHEQUEADO = createField("chequeado", org.jooq.impl.SQLDataType.VARCHAR.length(1).defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.id_empresa</code>.
	 */
	public final TableField<StockRecord, Integer> ID_EMPRESA = createField("id_empresa", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.usuario</code>.
	 */
	public final TableField<StockRecord, String> USUARIO = createField("usuario", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.stock.fechaReal</code>.
	 */
	public final TableField<StockRecord, Timestamp> FECHAREAL = createField("fechaReal", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * Create a <code>matera.stock</code> table reference
	 */
	public Stock() {
		this("stock", null);
	}

	/**
	 * Create an aliased <code>matera.stock</code> table reference
	 */
	public Stock(String alias) {
		this(alias, STOCK);
	}

	private Stock(String alias, Table<StockRecord> aliased) {
		this(alias, aliased, null);
	}

	private Stock(String alias, Table<StockRecord> aliased, Field<?>[] parameters) {
		super(alias, Matera.MATERA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<StockRecord, Integer> getIdentity() {
		return Keys.IDENTITY_STOCK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<StockRecord> getPrimaryKey() {
		return Keys.KEY_STOCK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<StockRecord>> getKeys() {
		return Arrays.<UniqueKey<StockRecord>>asList(Keys.KEY_STOCK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Stock as(String alias) {
		return new Stock(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Stock rename(String name) {
		return new Stock(name, null);
	}
}
