/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import matera.jooq.Keys;
import matera.jooq.Matera;
import matera.jooq.tables.records.ProfesionalRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Profesional extends TableImpl<ProfesionalRecord> {

	private static final long serialVersionUID = -1947315644;

	/**
	 * The reference instance of <code>matera.profesional</code>
	 */
	public static final Profesional PROFESIONAL = new Profesional();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProfesionalRecord> getRecordType() {
		return ProfesionalRecord.class;
	}

	/**
	 * The column <code>matera.profesional.id_profesional</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_PROFESIONAL = createField("id_profesional", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>matera.profesional.nombre</code>.
	 */
	public final TableField<ProfesionalRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.direccion</code>.
	 */
	public final TableField<ProfesionalRecord, String> DIRECCION = createField("direccion", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>matera.profesional.id_provincia</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_PROVINCIA = createField("id_provincia", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_departamento</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_DEPARTAMENTO = createField("id_departamento", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_localidad</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_LOCALIDAD = createField("id_localidad", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.codPostal</code>.
	 */
	public final TableField<ProfesionalRecord, String> CODPOSTAL = createField("codPostal", org.jooq.impl.SQLDataType.VARCHAR.length(15).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.fechaNac</code>.
	 */
	public final TableField<ProfesionalRecord, Date> FECHANAC = createField("fechaNac", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>matera.profesional.dni</code>.
	 */
	public final TableField<ProfesionalRecord, String> DNI = createField("dni", org.jooq.impl.SQLDataType.VARCHAR.length(11).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.matricula</code>.
	 */
	public final TableField<ProfesionalRecord, String> MATRICULA = createField("matricula", org.jooq.impl.SQLDataType.VARCHAR.length(12).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.contacto</code>.
	 */
	public final TableField<ProfesionalRecord, String> CONTACTO = createField("contacto", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.perfil</code>.
	 */
	public final TableField<ProfesionalRecord, String> PERFIL = createField("perfil", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>matera.profesional.email</code>.
	 */
	public final TableField<ProfesionalRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.telParticular</code>.
	 */
	public final TableField<ProfesionalRecord, String> TELPARTICULAR = createField("telParticular", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.telMovil</code>.
	 */
	public final TableField<ProfesionalRecord, String> TELMOVIL = createField("telMovil", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.telOtros</code>.
	 */
	public final TableField<ProfesionalRecord, String> TELOTROS = createField("telOtros", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.telConsultorio</code>.
	 */
	public final TableField<ProfesionalRecord, String> TELCONSULTORIO = createField("telConsultorio", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.secretaria</code>.
	 */
	public final TableField<ProfesionalRecord, String> SECRETARIA = createField("secretaria", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.dirConsultorio</code>.
	 */
	public final TableField<ProfesionalRecord, String> DIRCONSULTORIO = createField("dirConsultorio", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>matera.profesional.id_especialidad</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_ESPECIALIDAD = createField("id_especialidad", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_subespecialidad</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_SUBESPECIALIDAD = createField("id_subespecialidad", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_zona</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_ZONA = createField("id_zona", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_vendedor</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_VENDEDOR = createField("id_vendedor", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_entidad</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_ENTIDAD = createField("id_entidad", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.observaciones</code>.
	 */
	public final TableField<ProfesionalRecord, String> OBSERVACIONES = createField("observaciones", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>matera.profesional.habilita</code>.
	 */
	public final TableField<ProfesionalRecord, String> HABILITA = createField("habilita", org.jooq.impl.SQLDataType.VARCHAR.length(1).defaulted(true), this, "");

	/**
	 * The column <code>matera.profesional.id_empresa</code>.
	 */
	public final TableField<ProfesionalRecord, Integer> ID_EMPRESA = createField("id_empresa", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>matera.profesional</code> table reference
	 */
	public Profesional() {
		this("profesional", null);
	}

	/**
	 * Create an aliased <code>matera.profesional</code> table reference
	 */
	public Profesional(String alias) {
		this(alias, PROFESIONAL);
	}

	private Profesional(String alias, Table<ProfesionalRecord> aliased) {
		this(alias, aliased, null);
	}

	private Profesional(String alias, Table<ProfesionalRecord> aliased, Field<?>[] parameters) {
		super(alias, Matera.MATERA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ProfesionalRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PROFESIONAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProfesionalRecord> getPrimaryKey() {
		return Keys.KEY_PROFESIONAL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProfesionalRecord>> getKeys() {
		return Arrays.<UniqueKey<ProfesionalRecord>>asList(Keys.KEY_PROFESIONAL_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Profesional as(String alias) {
		return new Profesional(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Profesional rename(String name) {
		return new Profesional(name, null);
	}
}
