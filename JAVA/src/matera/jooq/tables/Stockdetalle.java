/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import matera.jooq.Keys;
import matera.jooq.Matera;
import matera.jooq.tables.records.StockdetalleRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Stockdetalle extends TableImpl<StockdetalleRecord> {

	private static final long serialVersionUID = -797941419;

	/**
	 * The reference instance of <code>matera.stockdetalle</code>
	 */
	public static final Stockdetalle STOCKDETALLE = new Stockdetalle();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<StockdetalleRecord> getRecordType() {
		return StockdetalleRecord.class;
	}

	/**
	 * The column <code>matera.stockdetalle.id_stockDetalle</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_STOCKDETALLE = createField("id_stockDetalle", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>matera.stockdetalle.id_stock</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_STOCK = createField("id_stock", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.id_remito</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_REMITO = createField("id_remito", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.id_ajusteStock</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_AJUSTESTOCK = createField("id_ajusteStock", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.id_producto</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_PRODUCTO = createField("id_producto", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.cantidad</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> CANTIDAD = createField("cantidad", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.dc</code>.
	 */
	public final TableField<StockdetalleRecord, String> DC = createField("dc", org.jooq.impl.SQLDataType.VARCHAR.length(1).defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.lote</code>.
	 */
	public final TableField<StockdetalleRecord, String> LOTE = createField("lote", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.serie</code>.
	 */
	public final TableField<StockdetalleRecord, String> SERIE = createField("serie", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.pm</code>.
	 */
	public final TableField<StockdetalleRecord, String> PM = createField("pm", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.vencimiento</code>.
	 */
	public final TableField<StockdetalleRecord, Date> VENCIMIENTO = createField("vencimiento", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>matera.stockdetalle.costoPesos</code>. Esta columna muestra el costo expresado en la moneda del producto. No se cambia el nombre de la columna para preservar la integridad y funcionamiento de los demas procedimientos
	 */
	public final TableField<StockdetalleRecord, BigDecimal> COSTOPESOS = createField("costoPesos", org.jooq.impl.SQLDataType.DECIMAL.precision(12, 2).defaulted(true), this, "Esta columna muestra el costo expresado en la moneda del producto. No se cambia el nombre de la columna para preservar la integridad y funcionamiento de los demas procedimientos");

	/**
	 * The column <code>matera.stockdetalle.id_moneda</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_MONEDA = createField("id_moneda", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>matera.stockdetalle.cotizacion</code>.
	 */
	public final TableField<StockdetalleRecord, BigDecimal> COTIZACION = createField("cotizacion", org.jooq.impl.SQLDataType.DECIMAL.precision(12, 3).defaulted(true), this, "");

	/**
	 * The column <code>matera.stockdetalle.observaciones</code>.
	 */
	public final TableField<StockdetalleRecord, String> OBSERVACIONES = createField("observaciones", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>matera.stockdetalle.id_zona</code>.
	 */
	public final TableField<StockdetalleRecord, Integer> ID_ZONA = createField("id_zona", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>matera.stockdetalle</code> table reference
	 */
	public Stockdetalle() {
		this("stockdetalle", null);
	}

	/**
	 * Create an aliased <code>matera.stockdetalle</code> table reference
	 */
	public Stockdetalle(String alias) {
		this(alias, STOCKDETALLE);
	}

	private Stockdetalle(String alias, Table<StockdetalleRecord> aliased) {
		this(alias, aliased, null);
	}

	private Stockdetalle(String alias, Table<StockdetalleRecord> aliased, Field<?>[] parameters) {
		super(alias, Matera.MATERA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<StockdetalleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_STOCKDETALLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<StockdetalleRecord> getPrimaryKey() {
		return Keys.KEY_STOCKDETALLE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<StockdetalleRecord>> getKeys() {
		return Arrays.<UniqueKey<StockdetalleRecord>>asList(Keys.KEY_STOCKDETALLE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Stockdetalle as(String alias) {
		return new Stockdetalle(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Stockdetalle rename(String name) {
		return new Stockdetalle(name, null);
	}
}
