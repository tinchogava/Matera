/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import matera.jooq.tables.LogError;
import matera.jooq.tables.records.LogErrorRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class LogErrorDao extends DAOImpl<LogErrorRecord, matera.jooq.tables.pojos.LogError, Integer> {

	/**
	 * Create a new LogErrorDao without any configuration
	 */
	public LogErrorDao() {
		super(LogError.LOG_ERROR, matera.jooq.tables.pojos.LogError.class);
	}

	/**
	 * Create a new LogErrorDao with an attached configuration
	 */
	@Autowired
	public LogErrorDao(Configuration configuration) {
		super(LogError.LOG_ERROR, matera.jooq.tables.pojos.LogError.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(matera.jooq.tables.pojos.LogError object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.LogError> fetchById(Integer... values) {
		return fetch(LogError.LOG_ERROR.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public matera.jooq.tables.pojos.LogError fetchOneById(Integer value) {
		return fetchOne(LogError.LOG_ERROR.ID, value);
	}

	/**
	 * Fetch records that have <code>id_user IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.LogError> fetchByIdUser(Integer... values) {
		return fetch(LogError.LOG_ERROR.ID_USER, values);
	}

	/**
	 * Fetch records that have <code>error IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.LogError> fetchByError(String... values) {
		return fetch(LogError.LOG_ERROR.ERROR, values);
	}

	/**
	 * Fetch records that have <code>date IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.LogError> fetchByDate(Timestamp... values) {
		return fetch(LogError.LOG_ERROR.DATE, values);
	}

	/**
	 * Fetch records that have <code>status IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.LogError> fetchByStatus(Byte... values) {
		return fetch(LogError.LOG_ERROR.STATUS, values);
	}
}
