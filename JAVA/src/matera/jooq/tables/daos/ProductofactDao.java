/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables.daos;


import java.math.BigDecimal;
import java.util.List;

import javax.annotation.Generated;

import matera.jooq.tables.Productofact;
import matera.jooq.tables.records.ProductofactRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ProductofactDao extends DAOImpl<ProductofactRecord, matera.jooq.tables.pojos.Productofact, Integer> {

	/**
	 * Create a new ProductofactDao without any configuration
	 */
	public ProductofactDao() {
		super(Productofact.PRODUCTOFACT, matera.jooq.tables.pojos.Productofact.class);
	}

	/**
	 * Create a new ProductofactDao with an attached configuration
	 */
	@Autowired
	public ProductofactDao(Configuration configuration) {
		super(Productofact.PRODUCTOFACT, matera.jooq.tables.pojos.Productofact.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(matera.jooq.tables.pojos.Productofact object) {
		return object.getIdProductofact();
	}

	/**
	 * Fetch records that have <code>id_productoFact IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByIdProductofact(Integer... values) {
		return fetch(Productofact.PRODUCTOFACT.ID_PRODUCTOFACT, values);
	}

	/**
	 * Fetch a unique record that has <code>id_productoFact = value</code>
	 */
	public matera.jooq.tables.pojos.Productofact fetchOneByIdProductofact(Integer value) {
		return fetchOne(Productofact.PRODUCTOFACT.ID_PRODUCTOFACT, value);
	}

	/**
	 * Fetch records that have <code>codigo IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByCodigo(String... values) {
		return fetch(Productofact.PRODUCTOFACT.CODIGO, values);
	}

	/**
	 * Fetch records that have <code>nombre IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByNombre(String... values) {
		return fetch(Productofact.PRODUCTOFACT.NOMBRE, values);
	}

	/**
	 * Fetch records that have <code>id_especialidad IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByIdEspecialidad(Integer... values) {
		return fetch(Productofact.PRODUCTOFACT.ID_ESPECIALIDAD, values);
	}

	/**
	 * Fetch records that have <code>id_subespecialidad IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByIdSubespecialidad(Integer... values) {
		return fetch(Productofact.PRODUCTOFACT.ID_SUBESPECIALIDAD, values);
	}

	/**
	 * Fetch records that have <code>id_forecastGrupo IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByIdForecastgrupo(Integer... values) {
		return fetch(Productofact.PRODUCTOFACT.ID_FORECASTGRUPO, values);
	}

	/**
	 * Fetch records that have <code>habilita IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByHabilita(String... values) {
		return fetch(Productofact.PRODUCTOFACT.HABILITA, values);
	}

	/**
	 * Fetch records that have <code>id_proveedor IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByIdProveedor(Integer... values) {
		return fetch(Productofact.PRODUCTOFACT.ID_PROVEEDOR, values);
	}

	/**
	 * Fetch records that have <code>descripcion IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByDescripcion(String... values) {
		return fetch(Productofact.PRODUCTOFACT.DESCRIPCION, values);
	}

	/**
	 * Fetch records that have <code>costo IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByCosto(BigDecimal... values) {
		return fetch(Productofact.PRODUCTOFACT.COSTO, values);
	}

	/**
	 * Fetch records that have <code>caja IN (values)</code>
	 */
	public List<matera.jooq.tables.pojos.Productofact> fetchByCaja(String... values) {
		return fetch(Productofact.PRODUCTOFACT.CAJA, values);
	}
}
