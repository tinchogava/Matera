/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "nivelescertificado", schema = "matera")
public class Nivelescertificado implements Serializable {

	private static final long serialVersionUID = -12564172;

	private Integer   idNivelescertificado;
	private Integer   idPresupuesto;
	private Integer   alternativas;
	private Integer   instrumental;
	private Integer   asistencia;
	private Integer   puntualidad;
	private String    controlado;
	private String    usuario;
	private Timestamp fechareal;

	public Nivelescertificado() {}

	public Nivelescertificado(Nivelescertificado value) {
		this.idNivelescertificado = value.idNivelescertificado;
		this.idPresupuesto = value.idPresupuesto;
		this.alternativas = value.alternativas;
		this.instrumental = value.instrumental;
		this.asistencia = value.asistencia;
		this.puntualidad = value.puntualidad;
		this.controlado = value.controlado;
		this.usuario = value.usuario;
		this.fechareal = value.fechareal;
	}

	public Nivelescertificado(
		Integer   idNivelescertificado,
		Integer   idPresupuesto,
		Integer   alternativas,
		Integer   instrumental,
		Integer   asistencia,
		Integer   puntualidad,
		String    controlado,
		String    usuario,
		Timestamp fechareal
	) {
		this.idNivelescertificado = idNivelescertificado;
		this.idPresupuesto = idPresupuesto;
		this.alternativas = alternativas;
		this.instrumental = instrumental;
		this.asistencia = asistencia;
		this.puntualidad = puntualidad;
		this.controlado = controlado;
		this.usuario = usuario;
		this.fechareal = fechareal;
	}

	@Id
	@Column(name = "id_nivelesCertificado", unique = true, nullable = false, precision = 10)
	public Integer getIdNivelescertificado() {
		return this.idNivelescertificado;
	}

	public void setIdNivelescertificado(Integer idNivelescertificado) {
		this.idNivelescertificado = idNivelescertificado;
	}

	@Column(name = "id_presupuesto", precision = 10)
	public Integer getIdPresupuesto() {
		return this.idPresupuesto;
	}

	public void setIdPresupuesto(Integer idPresupuesto) {
		this.idPresupuesto = idPresupuesto;
	}

	@Column(name = "alternativas", precision = 10)
	public Integer getAlternativas() {
		return this.alternativas;
	}

	public void setAlternativas(Integer alternativas) {
		this.alternativas = alternativas;
	}

	@Column(name = "instrumental", precision = 10)
	public Integer getInstrumental() {
		return this.instrumental;
	}

	public void setInstrumental(Integer instrumental) {
		this.instrumental = instrumental;
	}

	@Column(name = "asistencia", precision = 10)
	public Integer getAsistencia() {
		return this.asistencia;
	}

	public void setAsistencia(Integer asistencia) {
		this.asistencia = asistencia;
	}

	@Column(name = "puntualidad", precision = 10)
	public Integer getPuntualidad() {
		return this.puntualidad;
	}

	public void setPuntualidad(Integer puntualidad) {
		this.puntualidad = puntualidad;
	}

	@Column(name = "controlado", length = 1)
	public String getControlado() {
		return this.controlado;
	}

	public void setControlado(String controlado) {
		this.controlado = controlado;
	}

	@Column(name = "usuario", length = 45)
	public String getUsuario() {
		return this.usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	@Column(name = "fechaReal")
	public Timestamp getFechareal() {
		return this.fechareal;
	}

	public void setFechareal(Timestamp fechareal) {
		this.fechareal = fechareal;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Nivelescertificado (");

		sb.append(idNivelescertificado);
		sb.append(", ").append(idPresupuesto);
		sb.append(", ").append(alternativas);
		sb.append(", ").append(instrumental);
		sb.append(", ").append(asistencia);
		sb.append(", ").append(puntualidad);
		sb.append(", ").append(controlado);
		sb.append(", ").append(usuario);
		sb.append(", ").append(fechareal);

		sb.append(")");
		return sb.toString();
	}
}
