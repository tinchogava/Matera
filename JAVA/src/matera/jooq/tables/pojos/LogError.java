/**
 * This class is generated by jOOQ
 */
package matera.jooq.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "log_error", schema = "matera")
public class LogError implements Serializable {

	private static final long serialVersionUID = 957820180;

	private Integer   id;
	private Integer   idUser;
	private String    error;
	private Timestamp date;
	private Byte      status;

	public LogError() {}

	public LogError(LogError value) {
		this.id = value.id;
		this.idUser = value.idUser;
		this.error = value.error;
		this.date = value.date;
		this.status = value.status;
	}

	public LogError(
		Integer   id,
		Integer   idUser,
		String    error,
		Timestamp date,
		Byte      status
	) {
		this.id = id;
		this.idUser = idUser;
		this.error = error;
		this.date = date;
		this.status = status;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "id_user", nullable = false, precision = 10)
	public Integer getIdUser() {
		return this.idUser;
	}

	public void setIdUser(Integer idUser) {
		this.idUser = idUser;
	}

	@Column(name = "error", nullable = false, length = 65535)
	public String getError() {
		return this.error;
	}

	public void setError(String error) {
		this.error = error;
	}

	@Column(name = "date", nullable = false)
	public Timestamp getDate() {
		return this.date;
	}

	public void setDate(Timestamp date) {
		this.date = date;
	}

	@Column(name = "status", nullable = false, precision = 3)
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("LogError (");

		sb.append(id);
		sb.append(", ").append(idUser);
		sb.append(", ").append(error);
		sb.append(", ").append(date);
		sb.append(", ").append(status);

		sb.append(")");
		return sb.toString();
	}
}
